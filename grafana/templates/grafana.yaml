---
piVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
      containers:
        - name: grafana
          image: {{ .Values.grafana.image }}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: {{ .Values.grafana.port }}
              name: http-grafana
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              port: {{ .Values.grafana.port }}
              path: /robots.txt
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: {{ .Values.grafana.port }}
            timeoutSeconds: 1
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: grafana-pv
          resources:
            limits:
              memory: 750Mi
              cpu: 250m
            requests:
              memory: 200Mi
              cpu: 100m
          env:
            - name: GF_INSTALL_PLUGINS
              value: {{ .Values.grafana.gfInstallPlugins }}
            - name: GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS
              value: {{ .Values.grafana.gfPluginsAllowLoadingUnsingedPlugins }}
      volumes:
        - name: grafana-pv
          persistentVolumeClaim:
            claimName: grafana-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
spec:
  selector:
    app: grafana
  ports:
    - protocol: TCP
      port: {{ .Values.grafana.port }}
      targetPort: http-grafana
  sessionAffinity: None
  type: ClusterIP
